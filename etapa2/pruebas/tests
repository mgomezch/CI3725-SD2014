#!/usr/bin/env bash

trinity="${1}"

function main() {
  rm -rf shouldpass shouldfail syntaxpass
  mkdir -p shouldpass shouldfail syntaxpass

  awk 'BEGIN { FS = " @ " }; /./ { print $3 > $2 "/" NR "-" $1 }'

  for test in shouldpass/* syntaxpass/*; do if ! "${trinity}" "${test}" &> /dev/null; then echo "Unexpected failure: ${test}"; fi; done
  for test in shouldfail/*             ; do if   "${trinity}" "${test}" &> /dev/null; then echo "Unexpected pass:    ${test}"; fi; done
}

main <<EOF

2.2.1 @ shouldpass @ program true                    ; end;
2.2.1 @ shouldpass @ program false                   ; end;
2.2.1 @ shouldpass @ program use boolean  foo; in end; end;

2.2.1 @ shouldfail @ program use bool     foo    ; in end; end;
2.2.1 @ shouldfail @ program use booleano foo    ; in end; end;
2.2.1 @ shouldfail @ program use true     foo    ; in end; end;
2.2.1 @ shouldfail @ program use false    foo    ; in end; end;
2.2.1 @ shouldfail @ program use boolean  boolean; in end; end;
2.2.1 @ shouldfail @ program use boolean  true   ; in end; end;
2.2.1 @ shouldfail @ program use boolean  false  ; in end; end;



2.2.2 @ shouldpass @ program use number   foo; in end; end;

2.2.2 @ shouldfail @ program use numero   foo; in end; end;
2.2.2 @ shouldfail @ program use numerico foo; in end; end;
2.2.2 @ shouldfail @ program use num      foo; in end; end;
2.2.2 @ shouldfail @ program use 42       foo; in end; end;



2.2.3 @ shouldpass @ program 42  ; end;
2.2.3 @ shouldpass @ program 4.2 ; end;
2.2.3 @ shouldpass @ program 0.42; end;



2.2.4 @ shouldpass @ program use matrix( 42,  42)    foo   ; in end; end;

2.2.4 @ syntaxpass @ program use matrix(  0,   0)    foo   ; in end; end;
2.2.4 @ syntaxpass @ program use matrix(4.2, 4.2)    foo   ; in end; end;

2.2.4 @ shouldfail @ program use matrix              foo   ; in end; end;
2.2.4 @ shouldfail @ program use matrix(        )    foo   ; in end; end;
2.2.4 @ shouldfail @ program use matrix(  r,   c)    foo   ; in end; end;
2.2.4 @ shouldfail @ program use matrix( 42,  42)    matrix; in end; end;
2.2.4 @ shouldfail @ program use { 42 }              foo   ; in end; end;
2.2.4 @ shouldfail @ program use matrix(42 + 42, 42) foo   ; in end; end;
2.2.4 @ shouldfail @ program use matrix(42, 42 + 42) foo   ; in end; end;
2.2.4 @ shouldfail @ program use matrix(42, 42, 42)  foo   ; in end; end;



2.2.5 @ shouldpass @ program use row( 42)     foo; in end; end;
2.2.5 @ shouldpass @ program use col( 42)     foo; in end; end;

2.2.5 @ syntaxpass @ program use row(4.2)     foo; in end; end;
2.2.5 @ syntaxpass @ program use col(4.2)     foo; in end; end;
2.2.5 @ syntaxpass @ program use row(  0)     foo; in end; end;
2.2.5 @ syntaxpass @ program use col(  0)     foo; in end; end;

2.2.5 @ shouldfail @ program use row          foo; in end; end;
2.2.5 @ shouldfail @ program use col          foo; in end; end;
2.2.5 @ shouldfail @ program use row(   )     foo; in end; end;
2.2.5 @ shouldfail @ program use col(   )     foo; in end; end;
2.2.5 @ shouldfail @ program use row(  c)     foo; in end; end;
2.2.5 @ shouldfail @ program use col(  r)     foo; in end; end;
2.2.5 @ shouldfail @ program use row( 42)     row; in end; end;
2.2.5 @ shouldfail @ program use col( 42)     col; in end; end;
2.2.5 @ shouldfail @ program use row( 42, 42) foo; in end; end;
2.2.5 @ shouldfail @ program use col( 42, 42) foo; in end; end;
2.2.5 @ shouldfail @ program use row(42 + 42) foo; in end; end;
2.2.5 @ shouldfail @ program use col(42 + 42) foo; in end; end;



2.2.6 @ shouldpass @ program { 42                                   }; end;
2.2.6 @ shouldpass @ program { 42, 42                               }; end;
2.2.6 @ shouldpass @ program { 42, 42, 42                           }; end;
2.2.6 @ shouldpass @ program { 42         : 42                      }; end;
2.2.6 @ shouldpass @ program { 42         : 42         : 42         }; end;
2.2.6 @ shouldpass @ program { 42, 42     : 42, 42                  }; end;
2.2.6 @ shouldpass @ program { 42, 42, 42 : 42, 42, 42 : 42, 42, 42 }; end;
2.2.6 @ shouldpass @ program { 42 + 42                              }; end;
2.2.6 @ shouldpass @ program { 42 + 42, 42 + 42                     }; end;

2.2.6 @ syntaxpass @ program { 42, 42, 42 : 42, 42     : 42, 42, 42 }; end;
2.2.6 @ syntaxpass @ program { foo }                                 ; end;
2.2.6 @ syntaxpass @ program { foo, foo }                            ; end;
2.2.6 @ syntaxpass @ program { { 42 } }                              ; end;
2.2.6 @ syntaxpass @ program { { { 42 } } }                          ; end;



2.2.8 @ syntaxpass @ program 42 /= { 42 }; end;



2.3.1 @ shouldpass @ program (42)          ; end;
2.3.1 @ shouldpass @ program ((42))        ; end;
2.3.1 @ shouldpass @ program (((42)))      ; end;
2.3.1 @ shouldpass @ program (42 + 42)     ; end;
2.3.1 @ shouldpass @ program ({ 42 })      ; end;
2.3.1 @ shouldpass @ program 42 + (42)     ; end;
2.3.1 @ shouldpass @ program (42 + 42) + 42; end;

2.3.1 @ shouldfail @ program (42  ; end;
2.3.1 @ shouldfail @ program 42)  ; end;
2.3.1 @ shouldfail @ program ((42); end;
2.3.1 @ shouldfail @ program (42)); end;



2.3.1.1 @ shouldpass @ program not true        ; end;
2.3.1.1 @ shouldpass @ program not false       ; end;
2.3.1.1 @ shouldpass @ program not not true    ; end;
2.3.1.1 @ shouldpass @ program not (not true)  ; end;
2.3.1.1 @ shouldpass @ program not not not true; end;

2.3.1.1 @ syntaxpass @ program not foo      ; end;
2.3.1.1 @ syntaxpass @ program not (not foo); end;
2.3.1.1 @ syntaxpass @ program not not foo  ; end;
2.3.1.1 @ syntaxpass @ program not 42       ; end;

2.3.1.1 @ shouldfail @ program not    ; end;
2.3.1.1 @ shouldfail @ program not not; end;



2.3.1.2 @ shouldpass @ program true          & true                ; end;
2.3.1.2 @ shouldpass @ program true          & (true & true)       ; end;
2.3.1.2 @ shouldpass @ program (true & true) & true                ; end;
2.3.1.2 @ shouldpass @ program true          & true          & true; end;
2.3.1.2 @ shouldpass @ program true          | true                ; end;
2.3.1.2 @ shouldpass @ program true          | (true | true)       ; end;
2.3.1.2 @ shouldpass @ program (true | true) | true                ; end;
2.3.1.2 @ shouldpass @ program true          | true          | true; end;
2.3.1.2 @ shouldpass @ program (true & true) | true                ; end;
2.3.1.2 @ shouldpass @ program (true | true) & true                ; end;
2.3.1.2 @ shouldpass @ program true          & true          | true; end;
2.3.1.2 @ shouldpass @ program true          | true          & true; end;
2.3.1.2 @ shouldpass @ program (not true)    | true                ; end;
2.3.1.2 @ shouldpass @ program true          | (not true)          ; end;
2.3.1.2 @ shouldpass @ program not true      | true                ; end;
2.3.1.2 @ shouldpass @ program true          | not true            ; end;
2.3.1.2 @ shouldpass @ program (not true)    & true                ; end;
2.3.1.2 @ shouldpass @ program true          & (not true)          ; end;
2.3.1.2 @ shouldpass @ program not true      & true                ; end;
2.3.1.2 @ shouldpass @ program true          & not true            ; end;

2.3.1.2 @ syntaxpass @ program 42   & true; end;
2.3.1.2 @ syntaxpass @ program 42   | true; end;
2.3.1.2 @ syntaxpass @ program true | 42  ; end;
2.3.1.2 @ syntaxpass @ program true & 42  ; end;

2.3.1.2 @ shouldfail @ program      & true; end;
2.3.1.2 @ shouldfail @ program      | true; end;
2.3.1.2 @ shouldfail @ program true &     ; end;
2.3.1.2 @ shouldfail @ program true |     ; end;
2.3.1.2 @ shouldfail @ program not  & true; end;
2.3.1.2 @ shouldfail @ program not  | true; end;



2.3.1.5 @ shouldpass @ program      true           == true           ; end;
2.3.1.5 @ shouldpass @ program      true           == false          ; end;
2.3.1.5 @ shouldpass @ program      false          == true           ; end;
2.3.1.5 @ shouldpass @ program      false          == false          ; end;
2.3.1.5 @ shouldpass @ program      42             == 42             ; end;
2.3.1.5 @ shouldpass @ program      42 + 42        == 42             ; end;
2.3.1.5 @ shouldpass @ program      42             == 42 + 42        ; end;
2.3.1.5 @ shouldpass @ program      { 1 }          == { 1 }          ; end;
2.3.1.5 @ shouldpass @ program      not true       == true           ; end;
2.3.1.5 @ shouldpass @ program      (not true)     == true           ; end;
2.3.1.5 @ shouldpass @ program      true           == not true       ; end;
2.3.1.5 @ shouldpass @ program      true           == (not true)     ; end;
2.3.1.5 @ shouldpass @ program      (true == true) == true           ; end;
2.3.1.5 @ shouldpass @ program      true           == (true == true) ; end;
2.3.1.5 @ shouldpass @ program      true           /= true           ; end;
2.3.1.5 @ shouldpass @ program      true           /= false          ; end;
2.3.1.5 @ shouldpass @ program      false          /= true           ; end;
2.3.1.5 @ shouldpass @ program      false          /= false          ; end;
2.3.1.5 @ shouldpass @ program      42             /= 42             ; end;
2.3.1.5 @ shouldpass @ program      42 + 42        /= 42             ; end;
2.3.1.5 @ shouldpass @ program      42             /= 42 + 42        ; end;
2.3.1.5 @ shouldpass @ program      { 1 }          /= { 1 }          ; end;
2.3.1.5 @ shouldpass @ program      not true       /= true           ; end;
2.3.1.5 @ shouldpass @ program      (not true)     /= true           ; end;
2.3.1.5 @ shouldpass @ program      true           /= not true       ; end;
2.3.1.5 @ shouldpass @ program      true           /= (not true)     ; end;
2.3.1.5 @ shouldpass @ program      (true == true) /= true           ; end;
2.3.1.5 @ shouldpass @ program      true           /= (true == true) ; end;
2.3.1.5 @ shouldpass @ program      (true /= true) == true           ; end;
2.3.1.5 @ shouldpass @ program      true           == (true /= true) ; end;
2.3.1.5 @ shouldpass @ program not (true           == true          ); end;
2.3.1.5 @ shouldpass @ program not (true           == false         ); end;
2.3.1.5 @ shouldpass @ program not (false          == true          ); end;
2.3.1.5 @ shouldpass @ program not (false          == false         ); end;
2.3.1.5 @ shouldpass @ program not (42             == 42            ); end;
2.3.1.5 @ shouldpass @ program not (42 + 42        == 42            ); end;
2.3.1.5 @ shouldpass @ program not (42             == 42 + 42       ); end;
2.3.1.5 @ shouldpass @ program not ({ 1 }          == { 1 }         ); end;
2.3.1.5 @ shouldpass @ program not (not true       == true          ); end;
2.3.1.5 @ shouldpass @ program not ((not true)     == true          ); end;
2.3.1.5 @ shouldpass @ program not (true           == not true      ); end;
2.3.1.5 @ shouldpass @ program not (true           == (not true)    ); end;
2.3.1.5 @ shouldpass @ program not ((true == true) == true          ); end;
2.3.1.5 @ shouldpass @ program not (true           == (true == true)); end;
2.3.1.5 @ shouldpass @ program not (true           /= true          ); end;
2.3.1.5 @ shouldpass @ program not (true           /= false         ); end;
2.3.1.5 @ shouldpass @ program not (false          /= true          ); end;
2.3.1.5 @ shouldpass @ program not (false          /= false         ); end;
2.3.1.5 @ shouldpass @ program not (42             /= 42            ); end;
2.3.1.5 @ shouldpass @ program not (42 + 42        /= 42            ); end;
2.3.1.5 @ shouldpass @ program not (42             /= 42 + 42       ); end;
2.3.1.5 @ shouldpass @ program not ({ 1 }          /= { 1 }         ); end;
2.3.1.5 @ shouldpass @ program not (not true       /= true          ); end;
2.3.1.5 @ shouldpass @ program not ((not true)     /= true          ); end;
2.3.1.5 @ shouldpass @ program not (true           /= not true      ); end;
2.3.1.5 @ shouldpass @ program not (true           /= (not true)    ); end;
2.3.1.5 @ shouldpass @ program not ((true == true) /= true          ); end;
2.3.1.5 @ shouldpass @ program not (true           /= (true == true)); end;
2.3.1.5 @ shouldpass @ program not ((true /= true) == true          ); end;
2.3.1.5 @ shouldpass @ program not (true           == (true /= true)); end;

2.3.1.5 @ syntaxpass @ program      foo            == foo        ; end;
2.3.1.5 @ syntaxpass @ program      foo            /= foo        ; end;
2.3.1.5 @ syntaxpass @ program      true           == 42         ; end;
2.3.1.5 @ syntaxpass @ program      42             == true       ; end;
2.3.1.5 @ syntaxpass @ program      42             == { 42 }     ; end;
2.3.1.5 @ syntaxpass @ program      { 42 }         == 42         ; end;
2.3.1.5 @ syntaxpass @ program      { 42, 42 }     == { 42 }     ; end;
2.3.1.5 @ syntaxpass @ program      { 42 }         == { 42, 42 } ; end;
2.3.1.5 @ syntaxpass @ program      true           /= 42         ; end;
2.3.1.5 @ syntaxpass @ program      42             /= true       ; end;
2.3.1.5 @ syntaxpass @ program      42             /= { 42 }     ; end;
2.3.1.5 @ syntaxpass @ program      { 42 }         /= 42         ; end;
2.3.1.5 @ syntaxpass @ program      { 42, 42 }     /= { 42 }     ; end;
2.3.1.5 @ syntaxpass @ program      { 42 }         /= { 42, 42 } ; end;
2.3.1.5 @ syntaxpass @ program not (foo            == foo       ); end;
2.3.1.5 @ syntaxpass @ program not (foo            /= foo       ); end;
2.3.1.5 @ syntaxpass @ program not (true           == 42        ); end;
2.3.1.5 @ syntaxpass @ program not (42             == true      ); end;
2.3.1.5 @ syntaxpass @ program not (42             == { 42 }    ); end;
2.3.1.5 @ syntaxpass @ program not ({ 42 }         == 42        ); end;
2.3.1.5 @ syntaxpass @ program not ({ 42, 42 }     == { 42 }    ); end;
2.3.1.5 @ syntaxpass @ program not ({ 42 }         == { 42, 42 }); end;
2.3.1.5 @ syntaxpass @ program not (true           /= 42        ); end;
2.3.1.5 @ syntaxpass @ program not (42             /= true      ); end;
2.3.1.5 @ syntaxpass @ program not (42             /= { 42 }    ); end;
2.3.1.5 @ syntaxpass @ program not ({ 42 }         /= 42        ); end;
2.3.1.5 @ syntaxpass @ program not ({ 42, 42 }     /= { 42 }    ); end;
2.3.1.5 @ syntaxpass @ program not ({ 42 }         /= { 42, 42 }); end;

2.3.1.5 @ shouldfail @ program                == true        ; end;
2.3.1.5 @ shouldfail @ program true           ==             ; end;
2.3.1.5 @ shouldfail @ program                ==             ; end;
2.3.1.5 @ shouldfail @ program                /= true        ; end;
2.3.1.5 @ shouldfail @ program true           /=             ; end;
2.3.1.5 @ shouldfail @ program                /=             ; end;
2.3.1.5 @ shouldfail @ program true == true   == true        ; end;
2.3.1.5 @ shouldfail @ program true /= true   /= true        ; end;
2.3.1.5 @ shouldfail @ program true == true   /= true        ; end;
2.3.1.5 @ shouldfail @ program true           /= true == true; end;
2.3.1.5 @ shouldfail @ program true /= true   == true        ; end;
2.3.1.5 @ shouldfail @ program true           == true /= true; end;



2.3.1.7 @ shouldpass @ program      42      <  42      ; end;
2.3.1.7 @ shouldpass @ program      42      >  42      ; end;
2.3.1.7 @ shouldpass @ program      42      <= 42      ; end;
2.3.1.7 @ shouldpass @ program      42      >= 42      ; end;
2.3.1.7 @ shouldpass @ program      42 + 42 <  42      ; end;
2.3.1.7 @ shouldpass @ program      42 + 42 >  42      ; end;
2.3.1.7 @ shouldpass @ program      42 + 42 <= 42      ; end;
2.3.1.7 @ shouldpass @ program      42 + 42 >= 42      ; end;
2.3.1.7 @ shouldpass @ program      42      <  42 + 42 ; end;
2.3.1.7 @ shouldpass @ program      42      >  42 + 42 ; end;
2.3.1.7 @ shouldpass @ program      42      <= 42 + 42 ; end;
2.3.1.7 @ shouldpass @ program      42      >= 42 + 42 ; end;
2.3.1.7 @ shouldpass @ program not (42      <  42     ); end;
2.3.1.7 @ shouldpass @ program not (42      >  42     ); end;
2.3.1.7 @ shouldpass @ program not (42      <= 42     ); end;
2.3.1.7 @ shouldpass @ program not (42      >= 42     ); end;
2.3.1.7 @ shouldpass @ program not (42 + 42 <  42     ); end;
2.3.1.7 @ shouldpass @ program not (42 + 42 >  42     ); end;
2.3.1.7 @ shouldpass @ program not (42 + 42 <= 42     ); end;
2.3.1.7 @ shouldpass @ program not (42 + 42 >= 42     ); end;
2.3.1.7 @ shouldpass @ program not (42      <  42 + 42); end;
2.3.1.7 @ shouldpass @ program not (42      >  42 + 42); end;
2.3.1.7 @ shouldpass @ program not (42      <= 42 + 42); end;
2.3.1.7 @ shouldpass @ program not (42      >= 42 + 42); end;

2.3.1.7 @ syntaxpass @ program      42      <  true   ; end;
2.3.1.7 @ syntaxpass @ program      42      >  true   ; end;
2.3.1.7 @ syntaxpass @ program      42      <= true   ; end;
2.3.1.7 @ syntaxpass @ program      42      >= true   ; end;
2.3.1.7 @ syntaxpass @ program      true    <  42     ; end;
2.3.1.7 @ syntaxpass @ program      true    >  42     ; end;
2.3.1.7 @ syntaxpass @ program      true    <= 42     ; end;
2.3.1.7 @ syntaxpass @ program      true    >= 42     ; end;
2.3.1.7 @ syntaxpass @ program      { 42 }  <  42     ; end;
2.3.1.7 @ syntaxpass @ program      { 42 }  >  42     ; end;
2.3.1.7 @ syntaxpass @ program      { 42 }  <= 42     ; end;
2.3.1.7 @ syntaxpass @ program      { 42 }  >= 42     ; end;
2.3.1.7 @ syntaxpass @ program      42      <  { 42 } ; end;
2.3.1.7 @ syntaxpass @ program      42      >  { 42 } ; end;
2.3.1.7 @ syntaxpass @ program      42      <= { 42 } ; end;
2.3.1.7 @ syntaxpass @ program      42      >= { 42 } ; end;
2.3.1.7 @ syntaxpass @ program not (42      <  true  ); end;
2.3.1.7 @ syntaxpass @ program not (42      >  true  ); end;
2.3.1.7 @ syntaxpass @ program not (42      <= true  ); end;
2.3.1.7 @ syntaxpass @ program not (42      >= true  ); end;
2.3.1.7 @ syntaxpass @ program not (true    <  42    ); end;
2.3.1.7 @ syntaxpass @ program not (true    >  42    ); end;
2.3.1.7 @ syntaxpass @ program not (true    <= 42    ); end;
2.3.1.7 @ syntaxpass @ program not (true    >= 42    ); end;
2.3.1.7 @ syntaxpass @ program not ({ 42 }  <  42    ); end;
2.3.1.7 @ syntaxpass @ program not ({ 42 }  >  42    ); end;
2.3.1.7 @ syntaxpass @ program not ({ 42 }  <= 42    ); end;
2.3.1.7 @ syntaxpass @ program not ({ 42 }  >= 42    ); end;
2.3.1.7 @ syntaxpass @ program not (42      <  { 42 }); end;
2.3.1.7 @ syntaxpass @ program not (42      >  { 42 }); end;
2.3.1.7 @ syntaxpass @ program not (42      <= { 42 }); end;
2.3.1.7 @ syntaxpass @ program not (42      >= { 42 }); end;

2.3.1.7 @ shouldfail @ program 42 <  42 <  42; end;
2.3.1.7 @ shouldfail @ program 42 >  42 >  42; end;
2.3.1.7 @ shouldfail @ program 42 <= 42 <= 42; end;
2.3.1.7 @ shouldfail @ program 42 >= 42 >= 42; end;



2.3.2.1 @ shouldpass @ program 42                + 42               ; end;
2.3.2.1 @ shouldpass @ program 42                - 42               ; end;
2.3.2.1 @ shouldpass @ program (42 + 42)         + 42               ; end;
2.3.2.1 @ shouldpass @ program (42 + 42)         - 42               ; end;
2.3.2.1 @ shouldpass @ program (42 - 42)         + 42               ; end;
2.3.2.1 @ shouldpass @ program (42 - 42)         - 42               ; end;
2.3.2.1 @ shouldpass @ program 42                + (42 + 42)        ; end;
2.3.2.1 @ shouldpass @ program 42                + (42 - 42)        ; end;
2.3.2.1 @ shouldpass @ program 42                - (42 + 42)        ; end;
2.3.2.1 @ shouldpass @ program 42                - (42 - 42)        ; end;
2.3.2.1 @ shouldpass @ program { 42 }            + { 42 }           ; end;
2.3.2.1 @ shouldpass @ program { 42 }            - { 42 }           ; end;
2.3.2.1 @ shouldpass @ program ({ 42 } + { 42 }) + { 42 }           ; end;
2.3.2.1 @ shouldpass @ program ({ 42 } + { 42 }) - { 42 }           ; end;
2.3.2.1 @ shouldpass @ program ({ 42 } - { 42 }) + { 42 }           ; end;
2.3.2.1 @ shouldpass @ program ({ 42 } - { 42 }) - { 42 }           ; end;
2.3.2.1 @ shouldpass @ program { 42 }            + ({ 42 } + { 42 }); end;
2.3.2.1 @ shouldpass @ program { 42 }            + ({ 42 } - { 42 }); end;
2.3.2.1 @ shouldpass @ program { 42 }            - ({ 42 } + { 42 }); end;
2.3.2.1 @ shouldpass @ program { 42 }            - ({ 42 } - { 42 }); end;

2.3.2.1 @ syntaxpass @ program foo               + { 42 }           ; end;
2.3.2.1 @ syntaxpass @ program foo               - { 42 }           ; end;
2.3.2.1 @ syntaxpass @ program { 42 }            + foo              ; end;
2.3.2.1 @ syntaxpass @ program { 42 }            - foo              ; end;
2.3.2.1 @ syntaxpass @ program foo               + foo              ; end;
2.3.2.1 @ syntaxpass @ program foo               - foo              ; end;
2.3.2.1 @ syntaxpass @ program true              + { 42 }           ; end;
2.3.2.1 @ syntaxpass @ program true              - { 42 }           ; end;
2.3.2.1 @ syntaxpass @ program { 42 }            + true             ; end;
2.3.2.1 @ syntaxpass @ program { 42 }            - true             ; end;
2.3.2.1 @ syntaxpass @ program true              + true             ; end;
2.3.2.1 @ syntaxpass @ program true              - true             ; end;
2.3.2.1 @ syntaxpass @ program 42                + { 42 }           ; end;
2.3.2.1 @ syntaxpass @ program 42                - { 42 }           ; end;
2.3.2.1 @ syntaxpass @ program { 42 }            + 42               ; end;
2.3.2.1 @ syntaxpass @ program { 42 }            - 42               ; end;
2.3.2.1 @ syntaxpass @ program { 42 }            + { 42 }           ; end;
2.3.2.1 @ syntaxpass @ program { 42 }            - { 42 }           ; end;
2.3.2.1 @ syntaxpass @ program ({ 42 } + { 42 }) + { 42 }           ; end;
2.3.2.1 @ syntaxpass @ program ({ 42 } + { 42 }) - { 42 }           ; end;
2.3.2.1 @ syntaxpass @ program ({ 42 } - { 42 }) + { 42 }           ; end;
2.3.2.1 @ syntaxpass @ program ({ 42 } - { 42 }) - { 42 }           ; end;
2.3.2.1 @ syntaxpass @ program { 42 }            + ({ 42 } + { 42 }); end;
2.3.2.1 @ syntaxpass @ program { 42 }            + ({ 42 } - { 42 }); end;
2.3.2.1 @ syntaxpass @ program { 42 }            - ({ 42 } + { 42 }); end;
2.3.2.1 @ syntaxpass @ program { 42 }            - ({ 42 } - { 42 }); end;

2.3.2.1 @ shouldfail @ program + 42; end;
2.3.2.1 @ shouldfail @ program 42 +; end;



2.3.2.2 @ shouldpass @ program   -42       ; end;
2.3.2.2 @ shouldpass @ program  --42       ; end;
2.3.2.2 @ shouldpass @ program ---42       ; end;
2.3.2.2 @ shouldpass @ program   -{ 42 }   ; end;
2.3.2.2 @ shouldpass @ program  --{ 42 }   ; end;
2.3.2.2 @ shouldpass @ program ---{ 42 }   ; end;
2.3.2.2 @ shouldpass @ program   -(42 + 42); end;
2.3.2.2 @ shouldpass @ program   - 42 + 42 ; end;
2.3.2.2 @ shouldpass @ program -42 + -42   ; end;
2.3.2.2 @ shouldpass @ program -42 - -42   ; end;

2.3.2.2 @ syntaxpass @ program   -foo ; end;
2.3.2.2 @ syntaxpass @ program  --foo ; end;
2.3.2.2 @ syntaxpass @ program ---foo ; end;
2.3.2.2 @ syntaxpass @ program   -true; end;
2.3.2.2 @ syntaxpass @ program  --true; end;
2.3.2.2 @ syntaxpass @ program ---true; end;

2.3.2.2 @ shouldfail @ program   -; end;
2.3.2.2 @ shouldfail @ program  --; end;
2.3.2.2 @ shouldfail @ program ---; end;



2.3.2.3 @ shouldpass @ program 42          * 42         ; end;
2.3.2.3 @ shouldpass @ program (42 * 42)   * 42         ; end;
2.3.2.3 @ shouldpass @ program 42          * (42 * 42)  ; end;
2.3.2.3 @ shouldpass @ program 42          * 42 * 42    ; end;
2.3.2.3 @ shouldpass @ program { 42 }      * { 42 }     ; end;
2.3.2.3 @ shouldpass @ program { 42 , 42 } * { 42 : 42 }; end;
2.3.2.3 @ shouldpass @ program { 42 : 42 } * { 42 , 42 }; end;

2.3.2.3 @ syntaxpass @ program 42          * foo        ; end;
2.3.2.3 @ syntaxpass @ program foo         * 42         ; end;
2.3.2.3 @ syntaxpass @ program foo         * foo        ; end;
2.3.2.3 @ syntaxpass @ program 42          * { 42 }     ; end;
2.3.2.3 @ syntaxpass @ program { 42 }      * 42         ; end;
2.3.2.3 @ syntaxpass @ program { 42 : 42 } * { 42 : 42 }; end;
2.3.2.3 @ syntaxpass @ program { 42 , 42 } * { 42 , 42 }; end;
2.3.2.3 @ syntaxpass @ program 42          * true       ; end;
2.3.2.3 @ syntaxpass @ program true        * 42         ; end;
2.3.2.3 @ syntaxpass @ program true        * true       ; end;

2.3.2.3 @ shouldfail @ program 42 *; end;
2.3.2.3 @ shouldfail @ program * 42; end;



2.3.2.4 @ shouldpass @ program 42        / 42       ; end;
2.3.2.4 @ shouldpass @ program (42 / 42) / 42       ; end;
2.3.2.4 @ shouldpass @ program 42        / (42 / 42); end;
2.3.2.4 @ shouldpass @ program 42        /  42 / 42 ; end;
2.3.2.4 @ shouldpass @ program 42        % 42       ; end;
2.3.2.4 @ shouldpass @ program (42 % 42) % 42       ; end;
2.3.2.4 @ shouldpass @ program 42        % (42 % 42); end;
2.3.2.4 @ shouldpass @ program 42        %  42 % 42 ; end;
2.3.2.4 @ shouldpass @ program (42 / 42) % 42       ; end;
2.3.2.4 @ shouldpass @ program 42        % (42 / 42); end;
2.3.2.4 @ shouldpass @ program (42 % 42) / 42       ; end;
2.3.2.4 @ shouldpass @ program 42        / (42 % 42); end;

2.3.2.4 @ syntaxpass @ program 42          / foo        ; end;
2.3.2.4 @ syntaxpass @ program foo         / 42         ; end;
2.3.2.4 @ syntaxpass @ program foo         / foo        ; end;
2.3.2.4 @ syntaxpass @ program 42          / { 42 }     ; end;
2.3.2.4 @ syntaxpass @ program { 42 }      / 42         ; end;
2.3.2.4 @ syntaxpass @ program { 42 : 42 } / { 42 : 42 }; end;
2.3.2.4 @ syntaxpass @ program { 42 , 42 } / { 42 , 42 }; end;
2.3.2.4 @ syntaxpass @ program 42          / true       ; end;
2.3.2.4 @ syntaxpass @ program true        / 42         ; end;
2.3.2.4 @ syntaxpass @ program true        / true       ; end;
2.3.2.4 @ syntaxpass @ program 42          % foo        ; end;
2.3.2.4 @ syntaxpass @ program foo         % 42         ; end;
2.3.2.4 @ syntaxpass @ program foo         % foo        ; end;
2.3.2.4 @ syntaxpass @ program 42          % { 42 }     ; end;
2.3.2.4 @ syntaxpass @ program { 42 }      % 42         ; end;
2.3.2.4 @ syntaxpass @ program { 42 : 42 } % { 42 : 42 }; end;
2.3.2.4 @ syntaxpass @ program { 42 , 42 } % { 42 , 42 }; end;
2.3.2.4 @ syntaxpass @ program 42          % true       ; end;
2.3.2.4 @ syntaxpass @ program true        % 42         ; end;
2.3.2.4 @ syntaxpass @ program true        % true       ; end;

2.3.2.4 @ shouldfail @ program 42 /; end;
2.3.2.4 @ shouldfail @ program 42 %; end;
2.3.2.4 @ shouldfail @ program / 42; end;
2.3.2.4 @ shouldfail @ program % 42; end;



2.3.2.5 @ shouldpass @ program 42          div 42         ; end;
2.3.2.5 @ shouldpass @ program (42 div 42) div 42         ; end;
2.3.2.5 @ shouldpass @ program 42          div (42 div 42); end;
2.3.2.5 @ shouldpass @ program 42          div  42 div 42 ; end;
2.3.2.5 @ shouldpass @ program 42          mod 42         ; end;
2.3.2.5 @ shouldpass @ program (42 mod 42) mod 42         ; end;
2.3.2.5 @ shouldpass @ program 42          mod (42 mod 42); end;
2.3.2.5 @ shouldpass @ program 42          mod  42 mod 42 ; end;
2.3.2.5 @ shouldpass @ program (42 div 42) mod 42         ; end;
2.3.2.5 @ shouldpass @ program 42          mod (42 div 42); end;
2.3.2.5 @ shouldpass @ program (42 mod 42) div 42         ; end;
2.3.2.5 @ shouldpass @ program 42          div (42 mod 42); end;

2.3.2.5 @ syntaxpass @ program 42          div foo        ; end;
2.3.2.5 @ syntaxpass @ program foo         div 42         ; end;
2.3.2.5 @ syntaxpass @ program foo         div foo        ; end;
2.3.2.5 @ syntaxpass @ program 42          div { 42 }     ; end;
2.3.2.5 @ syntaxpass @ program { 42 }      div 42         ; end;
2.3.2.5 @ syntaxpass @ program { 42 : 42 } div { 42 : 42 }; end;
2.3.2.5 @ syntaxpass @ program { 42 , 42 } div { 42 , 42 }; end;
2.3.2.5 @ syntaxpass @ program 42          div true       ; end;
2.3.2.5 @ syntaxpass @ program true        div 42         ; end;
2.3.2.5 @ syntaxpass @ program true        div true       ; end;
2.3.2.5 @ syntaxpass @ program 42          mod foo        ; end;
2.3.2.5 @ syntaxpass @ program foo         mod 42         ; end;
2.3.2.5 @ syntaxpass @ program foo         mod foo        ; end;
2.3.2.5 @ syntaxpass @ program 42          mod { 42 }     ; end;
2.3.2.5 @ syntaxpass @ program { 42 }      mod 42         ; end;
2.3.2.5 @ syntaxpass @ program { 42 : 42 } mod { 42 : 42 }; end;
2.3.2.5 @ syntaxpass @ program { 42 , 42 } mod { 42 , 42 }; end;
2.3.2.5 @ syntaxpass @ program 42          mod true       ; end;
2.3.2.5 @ syntaxpass @ program true        mod 42         ; end;
2.3.2.5 @ syntaxpass @ program true        mod true       ; end;

2.3.2.5 @ shouldfail @ program 42 div; end;
2.3.2.5 @ shouldfail @ program 42 mod; end;
2.3.2.5 @ shouldfail @ program div 42; end;
2.3.2.5 @ shouldfail @ program mod 42; end;
2.3.2.5 @ shouldfail @ program use boolean div; in end; end;
2.3.2.5 @ shouldfail @ program use boolean mod; in end; end;




2.3.2.6 @ shouldpass @ program { 42 }'           ; end;
2.3.2.6 @ shouldpass @ program { 42 }''          ; end;
2.3.2.6 @ shouldpass @ program { 42 }'''         ; end;
2.3.2.6 @ shouldpass @ program ({ 42 } + { 42 })'; end;
2.3.2.6 @ shouldpass @ program { 42 }' + { 42 }  ; end;
2.3.2.6 @ shouldpass @ program { 42 }  + { 42 }' ; end;
2.3.2.6 @ shouldpass @ program { 42 }' + { 42 }' ; end;

2.3.2.6 @ syntaxpass @ program foo '  ; end;
2.3.2.6 @ syntaxpass @ program foo '' ; end;
2.3.2.6 @ syntaxpass @ program foo '''; end;
2.3.2.6 @ syntaxpass @ program true'  ; end;
2.3.2.6 @ syntaxpass @ program true'' ; end;
2.3.2.6 @ syntaxpass @ program true'''; end;

2.3.2.6 @ shouldfail @ program '  ; end;
2.3.2.6 @ shouldfail @ program '' ; end;
2.3.2.6 @ shouldfail @ program '''; end;

EOF
